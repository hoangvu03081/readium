{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Readium API",
    "description": "Handsome backend devs"
  },
  "servers": [
    {
      "url": "http://localhost:5000/"
    }
  ],
  "tags": [
    {
      "name": "Draft",
      "description": "Posts' related endpoints"
    },
    {
      "name": "Post",
      "description": "Posts' related endpoints"
    },
    {
      "name": "Comment",
      "description": "Comments' related endpoints"
    },
    {
      "name": "Auth",
      "description": "Auth endpoints"
    },
    {
      "name": "User",
      "description": "Users' endpoints"
    },
    {
      "name": "Profile",
      "description": "Users' profiles related endpoints"
    },
    {
      "name": "Collection",
      "description": "Users' collections related endpoints"
    },
    {
      "name": "Dev",
      "description": "Testing routes"
    },
    {
      "name": "Search",
      "description": "Elastic Search  "
    }
  ],
  "paths": {
    "/search": {
      "post": {
        "tags": [
          "Search"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keyword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/like": {
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "Like post",
        "description": "",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "\r/posts/{postId}/comments": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Comment on the post",
        "description": "",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        }
      }
    },
    "/dev/users": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get all users",
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Dev"
        ],
        "summary": "Delete all users",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/dev/collections": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get all collections",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/dev/posts": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get all posts",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/dev/": {
      "delete": {
        "tags": [
          "Dev"
        ],
        "summary": "Delete all data",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/dev\r/post": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Create a post (DEV)",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "file"
                  },
                  "title": {
                    "type": "string",
                    "example": "Post Title"
                  },
                  "content": {
                    "type": "string",
                    "example": "Text only content"
                  },
                  "textEditorContent": {
                    "type": "string",
                    "example": "Text Editor Content"
                  },
                  "description": {
                    "type": "string",
                    "example": "Description"
                  },
                  "isPublished": {
                    "type": "string",
                    "example": "false"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dev/ai": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Create posts for AI service test",
        "description": "",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Login",
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Logout",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/logout-all": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Logout from all devices",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Register by email",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Account created"
          },
          "400": {
            "description": "Email has already been used or fields have errors"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        }
      }
    },
    "/auth/confirm": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User CONFIRM their account",
        "description": "",
        "parameters": [
          {
            "name": "iv",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "description": "hashed user id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Activate successfully"
          },
          "400": {
            "description": "Account has already activated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth\r/facebook": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Login by Facebook",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth\r/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Login Google",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/forget": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Users forget password",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request change password successfully "
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        }
      }
    },
    "/auth/reset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Users reset password",
        "description": "",
        "parameters": [
          {
            "name": "iv",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "description": "hashed user id",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset password link to authenticated users",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User change password",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Saving changed password successfully"
          },
          "400": {
            "description": "Typed in wrong password"
          },
          "500": {
            "description": "Saving user to mongodb has some errors"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        }
      }
    },
    "/users/protected": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Route for testing authenticated users",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/following/posts": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get following writers' posts",
        "description": "",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/follow/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Is follow user",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User follow users",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error saving changes to mongodb"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/recommended": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get recommended writers",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully recommend users"
          },
          "500": {
            "description": "Error while finding in mongoose."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete my account",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profiles/": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get my profile",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit profile",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully edit profile"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Some errors occured when saving to mongodb"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfile"
              }
            }
          }
        }
      }
    },
    "/users/profiles/avatar": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get my avatar",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profiles/cover-image": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get my avatar",
        "description": "",
        "parameters": [],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profiles/{profileId}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get others' profile",
        "description": "",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/profiles/avatar/{userId}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get specific user's avatar",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Send back user avatar"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Object Id is error or mongodb error"
          }
        }
      }
    },
    "/users/profiles/cover-image/{userId}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get specific user's cover image",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Object Id is error or mongodb error"
          }
        }
      }
    },
    "/users/profiles\r/avatar": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Upload avatar",
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "file"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles\r/cover-image": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Post a cover image",
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "file"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles/display-name": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit display name",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "displayName": {
                    "type": "string",
                    "default": "display name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles/biography": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit biography",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "biography": {
                    "type": "string",
                    "default": "biography"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles/job": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit job",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "job": {
                    "type": "string",
                    "default": "job"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles/facebook": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit facebook link",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "facebook": {
                    "type": "string",
                    "default": "https://www.facebook.com/vu.hoang.372"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles/twitter": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit twitter link",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "twitter": {
                    "type": "string",
                    "default": "https://twitter.com/Hoangvu"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles/instagram": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit instagram",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "instagram": {
                    "type": "string",
                    "default": "https://www.instagram.com/HoangVu/"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profiles/contact-email": {
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Edit contact email",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "contactEmail": {
                    "type": "string",
                    "default": "mail@mail.com"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/collections/": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Create new collection",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "collection name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/collections/{collectionId}": {
      "delete": {
        "tags": [
          "Collection"
        ],
        "summary": "Delete a collection",
        "description": "",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/collections\r/posts": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Add post to collection",
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostToCollection"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Collection"
        ],
        "summary": "Delete post from collection",
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostToCollection"
              }
            }
          }
        }
      }
    },
    "/posts/popular": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get 1 popular post",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/posts/me": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get my published posts",
        "description": "",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts/{id}/cover-image": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get post's cover image",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "View a post",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Post"
        ],
        "summary": "Delete a post",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts/": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get posts",
        "description": "",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/posts/{id}/unpublish": {
      "put": {
        "tags": [
          "Post"
        ],
        "summary": "Endpoint to unpublish the post",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts/{postId}/comments": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "Get comments of a post",
        "description": "",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "\r/{commentId}": {
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "Edit a comment",
        "description": "",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        }
      }
    },
    "/{commentId}": {
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Delete comment",
        "description": "",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/drafts/": {
      "get": {
        "tags": [
          "Draft"
        ],
        "summary": "Fetch all my drafts",
        "description": "",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Draft"
        ],
        "summary": "Initialize a draft",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/drafts/{id}/cover-image": {
      "get": {
        "tags": [
          "Draft"
        ],
        "summary": "Fetch a draft cover image",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/drafts/{id}": {
      "get": {
        "tags": [
          "Draft"
        ],
        "summary": "Fetch a draft",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Draft"
        ],
        "summary": "Create a draft based on published post",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/drafts/{id}/diff": {
      "patch": {
        "tags": [
          "Draft"
        ],
        "summary": "Update draft's textEditorContent",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextEditorContent"
              }
            }
          }
        }
      }
    },
    "/drafts\r/{id}": {
      "patch": {
        "tags": [
          "Draft"
        ],
        "summary": "Update a draft",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "file"
                  },
                  "title": {
                    "type": "string",
                    "example": "Post Title"
                  },
                  "diff": {
                    "$ref": "#/components/schemas/TextEditorContent"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "tag 1",
                      "tag 2"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "example": "Post description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drafts\r/{id}/cover-image": {
      "put": {
        "tags": [
          "Draft"
        ],
        "summary": "Update draft's cover image",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "file"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drafts/{id}/title": {
      "put": {
        "tags": [
          "Draft"
        ],
        "summary": "Update draft's title",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "default": "Post title"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drafts/{id}/tags": {
      "put": {
        "tags": [
          "Draft"
        ],
        "summary": "Update draft's tags",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "tag 1",
                      "tag 2"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drafts\r/{id}/description": {
      "put": {
        "tags": [
          "Draft"
        ],
        "summary": "Update draft's description",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "default": "Post's description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/drafts/{id}/publish": {
      "put": {
        "tags": [
          "Draft"
        ],
        "summary": "Endpoint to publish the draft",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "displayName": {
            "type": "string",
            "example": "John Doe"
          },
          "password": {
            "type": "string",
            "example": "johnpassword"
          },
          "biography": {
            "type": "string",
            "example": "Hello, I'm a software engineer"
          },
          "job": {
            "type": "string",
            "example": "Software enginner"
          },
          "avatar": {
            "type": "string",
            "example": "bytes"
          },
          "followers": {
            "type": "array",
            "example": [
              "user1Id",
              "user2Id"
            ],
            "items": {
              "type": "string"
            }
          },
          "followings": {
            "type": "array",
            "example": [
              "user1Id",
              "user2Id"
            ],
            "items": {
              "type": "string"
            }
          },
          "notifications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "user1Id"
                },
                "content": {
                  "type": "string",
                  "example": "user1 hates you"
                },
                "url": {
                  "type": "string",
                  "example": "http://localhost:5000/hackyourfacebook"
                }
              }
            }
          },
          "activationLink": {
            "type": "string",
            "example": "http://localhost:5000/auth/activate/:id"
          },
          "activated": {
            "type": "boolean",
            "example": false
          },
          "collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Default Collection"
                },
                "posts": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              }
            }
          }
        },
        "required": [
          "email",
          "displayName"
        ]
      },
      "RegisterUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "testing"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "testing"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "ChangePassword": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "example": "testing"
          },
          "password": {
            "type": "string",
            "example": "testing123"
          }
        },
        "required": [
          "oldPassword",
          "password"
        ]
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "testing123"
          }
        },
        "required": [
          "password"
        ]
      },
      "EditProfile": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "example": "John Updated Doe"
          },
          "biography": {
            "type": "string",
            "example": "I'm being updated in Edit profile endpoint."
          },
          "job": {
            "type": "string",
            "example": "Neet"
          },
          "facebook": {
            "type": "string",
            "example": "https://www.example.com"
          },
          "twitter": {
            "type": "string",
            "example": "https://www.example.com"
          },
          "instagram": {
            "type": "string",
            "example": "https://www.example.com"
          },
          "contactEmail": {
            "type": "string",
            "example": "the@example.com"
          }
        }
      },
      "Email": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "PostToCollection": {
        "type": "object",
        "properties": {
          "postId": {
            "type": "string",
            "example": "post id"
          },
          "collectionName": {
            "type": "string",
            "example": "collection name"
          }
        },
        "required": [
          "postId",
          "collectionName"
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Comment Content"
          }
        },
        "required": [
          "content"
        ]
      },
      "TextEditorContent": {
        "type": "object",
        "properties": {
          "diff": {
            "type": "object",
            "properties": {
              "ops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "insert": {
                      "type": "string",
                      "example": "Grey"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "color": {
                          "type": "string",
                          "example": "#ccc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}