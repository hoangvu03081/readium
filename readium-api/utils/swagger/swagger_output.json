{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Readium API",
    "description": "Handsome backend devs"
  },
  "servers": [
    {
      "url": "http://localhost:5000/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth endpoints"
    },
    {
      "name": "User",
      "description": "Users' endpoints"
    },
    {
      "name": "Dev",
      "description": "Testing routes"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Dev"
        ],
        "description": "Get all users",
        "parameters": [],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Dev"
        ],
        "description": "Delete all users",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Login",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Login successfully"
          },
          "400": {
            "description": "Wrong password"
          },
          "404": {
            "description": "Could not find user"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Logout",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logout successfully"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Register by email",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Account created"
          },
          "400": {
            "description": "Email has already been used or Fields have erros"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        }
      }
    },
    "/auth/activate/{id}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Activate their account",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Activate successfully"
          },
          "400": {
            "description": "Account has already activated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth\r/facebook": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Login by Facebook",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth\r/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Login Google",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/forget": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Users forget password",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request change password successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/protected": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Route for testing authenticated users",
        "description": "",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}/avatar": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get specific user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Send back user avatar"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "fullname": {
            "type": "string",
            "example": "John Doe"
          },
          "password": {
            "type": "string",
            "example": "johnpassword"
          },
          "biography": {
            "type": "string",
            "example": "Hello, I'm a software engineer"
          },
          "job": {
            "type": "string",
            "example": "Software enginner"
          },
          "avatar": {
            "type": "string",
            "example": "bytes"
          },
          "followers": {
            "type": "array",
            "example": [
              "user1Id",
              "user2Id"
            ],
            "items": {
              "type": "string"
            }
          },
          "followings": {
            "type": "array",
            "example": [
              "user1Id",
              "user2Id"
            ],
            "items": {
              "type": "string"
            }
          },
          "notifications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "example": "user1Id"
                },
                "content": {
                  "type": "string",
                  "example": "user1 hates you"
                },
                "url": {
                  "type": "string",
                  "example": "http://localhost:5000/hackyourfacebook"
                }
              }
            }
          },
          "activation_link": {
            "type": "string",
            "example": "http://localhost:5000/auth/activate/:id"
          },
          "activated": {
            "type": "boolean",
            "example": false
          },
          "collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Default Collection"
                },
                "posts": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              }
            }
          }
        },
        "required": [
          "email",
          "fullname"
        ]
      },
      "RegisterUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "testing"
          },
          "fullname": {
            "type": "string",
            "example": "John Doe"
          }
        },
        "required": [
          "email",
          "password",
          "fullname"
        ]
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "testing"
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}